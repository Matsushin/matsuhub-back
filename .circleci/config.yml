version: 2.1
jobs:
  build_and_test:
    docker:
      - image: circleci/ruby:2.7.3-node
        environment:
          RAILS_ENV: test
          DB_HOST: '127.0.0.1'
          TZ: UTC
      - image: mysql:5.7.33
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          TZ: UTC
    steps:
      - checkout

      # https://discuss.circleci.com/t/using-bundler-2-0-during-ci-fails/27411/3
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
      - run:
          name: Update sources list
          command: sudo apt-get update

      - run:
          name: Install MySQL client
          command: |
            sudo apt-get install default-mysql-client
      - restore_cache:
          keys:
            - bundle-cache-{{ checksum "Gemfile.lock" }}
            - bundle-cache-
      - run:
          name: setting
          command: |
            cp .env.sample .env.test
      - run:
          name: bundle install
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      # bundle installされたものcacheする
      - save_cache:
          key: bundle-cache-{{ checksum "Gemfile.lock" }}
          paths: ./vendor/bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      - run:
          name: setup db
          command: bundle exec rails db:create db:migrate
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rspec --profile 10 \
                            --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --tag ~benchmark \
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_and_test